{
  "name": "call-dir",
  "version": "1.4.0",
  "keywords": [
    "require",
    "directory",
    "files",
    "fs",
    "import",
    "autoloader"
  ],
  "files": [
    "/dist"
  ],
  "engines": {
    "node": ">=8.12.0"
  },
  "description": "Searches for files in a directory and executes a callback for each. All insecure symlinks, dotfiles and files without extension are ignored.",
  "author": "≈Åaniewski Bartosz <bartosz@laniewski.me> (https://laniewski.me/)",
  "license": "MIT",
  "main": "dist/index.js",
  "types": "dist",
  "repository": {
    "type": "git",
    "url": "https://github.com/Bartozzz/call-dir.git"
  },
  "bugs": {
    "url": "https://github.com/Bartozzz/call-dir/issues"
  },
  "devDependencies": {
    "@babel/cli": "^7.8.4",
    "@babel/core": "^7.9.0",
    "@babel/node": "7.10.1",
    "@babel/preset-env": "^7.9.0",
    "@babel/preset-flow": "^7.9.0",
    "@babel/register": "^7.9.0",
    "@types/node": "14.0.5",
    "babel-eslint": "^10.1.0",
    "babel-plugin-add-module-exports": "^1.0.2",
    "babel-preset-minify": "0.5.1",
    "chai": "^4.2.0",
    "dtslint": "3.6.9",
    "eslint": "^6.8.0",
    "eslint-config-prettier": "^6.10.1",
    "eslint-config-standard": "^14.1.1",
    "eslint-plugin-flowtype": "^4.7.0",
    "eslint-plugin-import": "^2.20.2",
    "eslint-plugin-node": "^11.1.0",
    "eslint-plugin-prettier": "^3.1.2",
    "eslint-plugin-promise": "^4.2.1",
    "eslint-plugin-standard": "^4.0.1",
    "flow-bin": "^0.125.1",
    "fs-extra": "9.0.0",
    "glob": "7.1.6",
    "mocha": "^7.1.1",
    "prettier": "^2.0.2",
    "rimraf": "3.0.2"
  },
  "scripts": {
    "pretest": "npm run prepare",
    "test": "npm run test:eslint && npm run test:flow && npm run test:typescript && npm run test:mocha",
    "test:flow": "npx flow",
    "test:typescript": "npx dtslint types",
    "test:mocha": "npx mocha --require @babel/register",
    "test:eslint": "npx eslint src",
    "defs:flow": "npx babel-node ./.bin/definitions-flow.js",
    "defs:typescript": "npx babel-node ./.bin/definitions-typescript.js",
    "clean": "npx rimraf dist",
    "prebuild": "npm run clean",
    "build": "npx babel src -d dist",
    "postbuild": "npm run defs:flow && npm run defs:typescript",
    "watch": "npx babel src -d dist -w",
    "prepare": "npm run build"
  }
}
